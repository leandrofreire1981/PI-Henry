import { useState } from "react"
import { useDispatch, useSelector } from "react-redux"
import { getAllRecipes, getRecipesByName, getRecipesFromDb, setRecipeByName } from "../actions"

import image from '../img/error.jpg'
import PostRecipes from "./PostRecipes"
import { useEffect } from "react"
import Page from "./Page"

export default function Home(props) {
    var array = []
    const RECIPE_PAGE = 9
    const dispatch = useDispatch()
    const recipes = useSelector(state => state.recipes)
  
    
    
  
    
    
    
    const [input, setInput ] = useState({
        id: '',
        name: '',
        summary: '',
        healthScore: 0,
        steps: [],
        diets: [],
        image
    })
    
    
    
    useEffect(() => {
        console.log('useEffect')
        dispatch(getAllRecipes(),
        dispatch(getRecipesFromDb()))
    }, [])
    
    function handleOnChange(e){
        setInput({...input, ['name']:e.target.value})
        
    }
    
    function handleOnSubmit(e){
        e.preventDefault()
   
        for(const iterator of recipes)
            if(iterator.name.toLocaleLowerCase().includes(input.name.toLocaleLowerCase()))
        array.push(iterator)
        if(!array.length) 
            array.push({
            id: 'error',
            name: 'No se encuentra una receta con ese nombre',
            summary: '',
            healthScore: -1,
            steps: [],
            diets: [],
            image: image
        }) 
       setRecipesPage(array)
       setRecipesFinded(true)
       
       // setRecipeByName(array, dispatch)
        
        setCurrentPage(1)
        console.log('otro array', array)
        e.target[0].value=''
    }
    
    function handleOnRefresh(e){
        setRecipesFinded(false)
    }
   
    const [ recipesFinded, setRecipesFinded ] = useState(false)
    const [ recipesPage, setRecipesPage ] = useState(recipes)
    const [ currentPage, setCurrentPage ] = useState(1)
    const lastRecipe = currentPage * RECIPE_PAGE
    const firstRecipe = lastRecipe - RECIPE_PAGE
    const renderRecipes = recipes.slice(firstRecipe, lastRecipe)
    function refresh(ref){
        setCurrentPage(ref)
    }
    console.log('array', recipesPage)
    
    if(recipesFinded) 
        return (
            <div>
            <h1>Recetas encontradas</h1>
            <form onSubmit={handleOnRefresh}>
                <input type='submit' value='Recargar recetas' name='refresh' />
            </form>
             {<Page refresh={refresh} currentPage={currentPage} length={recipesPage.length} />} 
            <main>
            {    
                  recipesPage?.map((r, i) => (
                        <div key={i}> 
                           <PostRecipes key={r.id} name={r.name} summary={r.summary} healthScore={r.healthScore} image={r.image} diets={r.diets} steps={r.steps} />    
                        </div>
            ))} 
            </main>
        </div>
        )
    
    return (
        <div>
                        <h1>Recetas</h1>
            <form onSubmit={handleOnSubmit}>
                <div>
                    <label>Ingrese una comida: </label>
                    <input type='text' name='name' onChange={handleOnChange}/>
                </div>
            </form>
            {<Page refresh={refresh} currentPage={currentPage} length={recipesPage.length} />}
            <main>
                 {    
                    renderRecipes?.map((r, i) => (
                          <div key={i}> 
                             <PostRecipes key={r.id} name={r.name} summary={r.summary} healthScore={r.healthScore} image={r.image} diets={r.diets} steps={r.steps} />    
                          </div>
              ))} 
              
              </main>

        </div>
    )
}



